{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Coming Soon!","text":"<p>These docs are Work in Progress! You may contribute to them to speed up the documentation process.</p>"},{"location":"commands-overview/","title":"Commands Overview","text":"<p>This page provides a quick overview of all commands in Yantra Launcher that you can glance. It does not try to explain every concept in detail. For getting a detailed perspective, see the individual command documentation.</p> <p>Note</p> <p>You may not see all these commands in the Minimal version of Yantra Launcher.</p>"},{"location":"commands-overview/#launch-p-s-apppackage-nameshortcut-label","title":"launch [-p/-s] [app/package name/shortcut label]","text":"<p>Launches specified app or shortcut. Example: 'launch Chrome'. Use the '-p' flag to launch app by package name. Example: 'launch com.android.chrome'. Use the '-s' flag to launch a Shortcut. Example: 'launch -s Chats'</p>"},{"location":"commands-overview/#help-help-command_name","title":"help | help [command_name]","text":"<p>Documentation/Manual for all commands of Yantra Launcher. Use 'help cmd_name' to get documentation for specific command.</p>"},{"location":"commands-overview/#community-discordreddit","title":"community [discord|reddit]","text":"<p>Redirects to the Discord server of Yantra Launcher. Here you can share and get Feedback, Suggestions, Insights, tips and CLI emotions from other users like you! Use the optional 'discord' or 'reddit' parameters to navigate to a specific platform.</p>"},{"location":"commands-overview/#theme","title":"theme  <p>Applies specified theme to Yantra Launcher. Example: 'theme Tokyonight'</p>","text":""},{"location":"commands-overview/#call-name-number","title":"call [name | number] <p>Calls specified contact name. If contact name is not found then the raw input (considered as phone number) is called.</p>","text":""},{"location":"commands-overview/#bluetooth-state","title":"bluetooth [state] <p>Toggles bluetooth on/off. Example: 'bluetooth on' or 'bt 0'</p>","text":""},{"location":"commands-overview/#flash-state","title":"flash [state] <p>Toggles flashlight on/off. Example: 'flash on' or 'flash 0'. Use without any args to toggle the state.</p>","text":""},{"location":"commands-overview/#internet","title":"internet <p>Opens a panel containing settings to enable internet connection.</p>","text":""},{"location":"commands-overview/#ai-messagereset","title":"ai [message/reset] <p>A simple tool to access chatGPT from the terminal. Based on OpenAI's gpt-3.5-turbo, you can chat with your own AI assistant. An API key is required to be entered in 'settings'. When you want to erase the message history to save tokens, you can use the 'reset' message ('ai reset').</p>","text":""},{"location":"commands-overview/#todo","title":"todo <p>A simple TODO utility. Use 'todo' to get list of tasks with their indexes and progress. Add a task like 'todo Go for a brisk walk'. Mark tasks as done using their index returned from 'todo' command, like 'todo 2' marks the 3rd task as done. Use 'todo -1' to clear list.</p> <p>Use the -p argument to mark optional progress for any task, like 'todo -p 1 30' marks the 2nd task as 30% done (Syntax: todo -p taskIndex progress). Use 'todo -p -1' to reset progress for all tasks.</p>","text":""},{"location":"commands-overview/#alias","title":"alias <p>Unix-like aliasing system to set short-hand commands for available commands. Note that Yantra Launcher saves all aliases in memory and is retained even after restarting the Launcher session. Pre-defined commands can not be aliased. Usage (to set or update an alias): 'alias alias_name = alias_cmd' Example: 'alias h = help' Use 'alias alias_name' to get value of the alias. Use 'alias' to get list of all current aliases. Use 'alias -1' to reset to default aliases.</p>","text":""},{"location":"commands-overview/#weather","title":"weather  <p>Fetches the weather report for specified location. Example w new delhi</p>","text":""},{"location":"commands-overview/#username","title":"username  <p>Used to change username. Example: username johnDoe</p>","text":""},{"location":"commands-overview/#pwd","title":"pwd <p>Prints the current/working directory.</p>","text":""},{"location":"commands-overview/#cd-path","title":"cd [path] <p>Changes the current directory to the specified path. Example: 'cd DCIM'</p>","text":""},{"location":"commands-overview/#ls-a","title":"ls [-a] <p>Lists contents in the current directory. Optionally, pass the '-a' flag to also show hidden files/folders.</p>","text":""},{"location":"commands-overview/#open-file-name","title":"open [file name] <p>Opens specified file. Example: 'open certificate.pdf'</p>","text":""},{"location":"commands-overview/#search","title":"search <p>Searches the internet for the provided query. Search engine can be specified with the -e flag (-e=google|duckduckgo|brave|bing|yahoo|ecosia|startpage|qwant|you|playstore). Default is google. You can use a custom search engine by specifying the url with the -u flag (-u=https://example.com/search?q=). The query is the only required argument that is provided at the end of the command. It is automatically URL encoded during execution of the command. Examples: 'search Yantra Launcher' 'search -e=duckduckgo Yantra Launcher' 'search -u=https://example.com/search?q= Yantra Launcher'</p>","text":""},{"location":"commands-overview/#web","title":"web  <p>Opens the specified URL in your browser, if present, ofc!</p>","text":""},{"location":"commands-overview/#gupt-gupt-url","title":"GUPT | GUPT [url] <p>G.U.P.T stands for Get Undercover Private Tab. Tired of going to browser everytime and opening Incognito Tab. With GUPT command, you get a built-in Private incognito Tab. Example: 'gupt https://www.youtube.com'. Use without url to default to https://www.google.com</p>","text":""},{"location":"commands-overview/#tts","title":"tts  <p>Speaks provided text (Text-to-Speech). Example: 'tts Travel, World!'</p>","text":""},{"location":"commands-overview/#sfx","title":"sfx <p>Play sound effects</p>","text":""},{"location":"commands-overview/#news","title":"news <p>Opens the news website configured via settings. Defaults to Google News</p>","text":""},{"location":"commands-overview/#bored","title":"bored <p>Helps you find things to do when you're bored! (using Bored API)</p>","text":""},{"location":"commands-overview/#time-utc-gmt","title":"time [utc] [GMT] <p>Shows current local Date and Time. Use the utc arg to get UTC time. An optional time difference parameter can add or subtract that from UTC time. Example: time time utc time utc +5:30</p>","text":""},{"location":"commands-overview/#alarm-time-message","title":"alarm [time] [message] <p>Sets alarm using a supported Alarm Clock on your device. Use without args to open the list of alarms on your device default app. The time must be in 24 hr format. It can optionally be followed by a message string to display in alarm. Examples: 'alarm 14:30' sets alarm for 2:30 pm 'alarm 0:15 Wish good night to ***' sets alarm for 12:15 am with a message to display.</p>","text":""},{"location":"commands-overview/#timer-length-message","title":"timer [length] [message] <p>Used to create a countdown timer using the default app on your device. Use without args to launch the timer app. The length must be in seconds and ranges from 1 to 86400 (24 hrs). It can optionally be followed by a message string to display in timer. Examples: 'timer 60' sets timer for 1 minute 'timer 3600 Take out the trash' sets timer for 1 hour with a message to display.</p>","text":""},{"location":"commands-overview/#settings","title":"settings <p>Launches Settings for Yantra Launcher.</p>","text":""},{"location":"commands-overview/#sysinfo-sysinfo-component","title":"sysinfo | sysinfo -component <p>Displays system information, much like 'Neofetch'</p>","text":""},{"location":"commands-overview/#screentime-app-name-all","title":"screentime [app-name][-all] <p>Shows Total Screen time for the day! Give app name to get screen time for particular app, or use the '-all' flag to get screentime for all apps used today. Example: 'screentime Instagram' or 'screentime -all'</p>","text":""},{"location":"commands-overview/#scripts","title":"scripts <p>Opens dialog for creating, modifying and deleting custom scripts for Yantra Launcher, to execute multiple commands at once. Scripts can have Yantra Launcher commands in it. But you can also create exclusive Lua scripts for extended functionality. If you are using Lua code, you can even call Yantra Launcher commands from the script using the binding.exec() function. Example: 'binding.exec(text Scripts are cool!)'. Also see the 'run' command.</p>","text":""},{"location":"commands-overview/#quote","title":"quote <p>Displays a random quote! What else do you expect?</p>","text":""},{"location":"commands-overview/#bg-bg-random-id53-grayscale-blur2","title":"bg | bg random [-id=53] [-grayscale] [-blur=2] <p>'bg' is used to set custom Wallpaper from the Albums. Use 'bg -1' to remove custom Wallpaper and set to solid theme background. Use 'bg random' to fetch a random Wallpaper from the picsum.photos. You can fetch a specific image by passing its id as a flag parameter (full list at https://picsum.photos/images). An optional -grayscale flag is used to get a grayscale image. Get a blurred image by providing the blur flag with intensity from 1 to 10. Note that this command only changes the Home screen wallpaper, not the Lock screen one.</p>","text":""},{"location":"commands-overview/#text","title":"text  <p>Broadcasts text message. Example: 'text Yantra is cool!'</p>","text":""},{"location":"commands-overview/#translate-language","title":"translate &lt;-language&gt;  <p>Translator based on Google Translate. Provide a valid language code flag and the text to translate. The source language is automatically detected. Example: translate -fr Hello</p>","text":""},{"location":"commands-overview/#music-playpauseprevnext","title":"music [play/pause/prev/next] <p>Control the local music state on your device. Use without any parameters to toggle the music state. Use 'play' to resume music, 'pause' to pause music, 'next' to play the next track and 'prev' to play the previous track in the queue.</p>","text":""},{"location":"commands-overview/#echo-mode","title":"echo [-mode]  <p>Prints specified text to the terminal with the given mode. Here mode is an optional argument (e: Error text, s: Success text, w: Warning text) representing the nature of the text output. If mode is not specified, the text is printed (normal)ly Examples: 'echo -e An error occurred.' 'echo Hello, World'</p>","text":""},{"location":"commands-overview/#speedtest","title":"speedtest <p>Opens a small GUI speedtest utility to check your internet speed, powered by openspeedtest.com.</p>","text":""},{"location":"commands-overview/#notify","title":"notify  <p>Fire a notification with the given message. Example: notify Opened work apps</p>","text":""},{"location":"commands-overview/#calc-expression","title":"calc [expression] <p>An in-built calculator to evaluate arithmetic expressions. It does addition, subtraction, multiplication, division, exponentiation (using the ^ symbol), and a few basic functions like sqrt, sin, cos and tan. It supports grouping using (...), and it gets the operator precedence and associativity rules correct.</p> <p>Example: 'calc ((4 - 2^3 + 1) * -sqrt(33+44)) / 2' gives 7.5</p>","text":""},{"location":"commands-overview/#email","title":"email  <p>Launches email app with recipient set. Example: 'email coderGtm@gmail.com'</p>","text":""},{"location":"commands-overview/#sleep","title":"sleep  <p>Pauses Yantra Launcher for specified milliseconds. Usage: 'sleep numOfMilliseconds' Example: 'sleep 5000'</p>","text":""},{"location":"commands-overview/#vibe","title":"vibe  <p>Vibrates the device for specified duration (in milliseconds). Example: 'vibe 1000' does a 1 second vibration.</p>","text":""},{"location":"commands-overview/#init","title":"init <p>A special script (function) to execute specified commands automatically whenever Launcher is opened or navigated to.</p>","text":""},{"location":"commands-overview/#launchf-approx-app-name","title":"launchf [approx app name] <p>Launches app by matching given app name string using fuzzy search algorithm (Levenshtein distance). Example: 'launchf tube' may launch YouTube.</p>","text":""},{"location":"commands-overview/#info-p-apppackage-name","title":"info [-p] [app/package name] <p>Launches app settings page for specified app. Example: 'info Big Battery Display' or 'i Farty Orbit'. Use the optional '-p' flag to launch app settings by package name. Example: 'info com.android.chrome'</p>","text":""},{"location":"commands-overview/#infof-approx-app-name","title":"infof [approx app name] <p>Launches app settings by matching given app name string using fuzzy search algorithm (Levenshtein distance). Example: 'infof tube' may open system settings for YouTube.</p>","text":""},{"location":"commands-overview/#uninstall","title":"uninstall  <p>Uninstalls the specified app. Example: 'u Instagram'</p>","text":""},{"location":"commands-overview/#list-component","title":"list [component] <p>Lists specified component [apps/themes/contacts].</p>","text":""},{"location":"commands-overview/#unalias","title":"unalias <p>Used to un-alias (remove) an alias. Usage: 'unalias alias_name' Example: 'unalias h' Use 'unalias -1' to remove all aliases</p>","text":""},{"location":"commands-overview/#termux-args","title":"termux  [args] <p>Runs given command in termux if it is installed and logs the stdout generated. Note that the 'allow-external-apps' property must be set to true in ~/.termux/termux.properties in Termux app and RUN_COMMAND permission must be given from Yantra Launcher's settings page. Also, the result is returned only after the command is fully executed (exited) due to API restrictions. Usage: termux cmd_name [args] Example: 'termux echo Hello from Termux' To resolve any issues still occurring, ask in Discord Community or mail me at coderGtm@gmail.com.</p>","text":""},{"location":"commands-overview/#run-script_name","title":"run script_name <p>Used to run your custom scripts. Use the '-lua' flag to run the script as Lua code. Normal scripts can be run with the '-clean' flag to not print the command logs while execution and just log the output of the commands.</p>","text":""},{"location":"commands-overview/#backup-i","title":"backup [-i] <p>A utility to backup your Yantra Launcher configuration. Using the command will export your current configuration to a file. If you use the -i flag, you can import a configuration file that will replace your current configuration.</p>","text":""},{"location":"commands-overview/#dict-urban","title":"dict [-urban]  <p>Search for the meaning of a word in an online dictionary (freeDictionaryAPI). Use the '-urban' flag to search in Urban Dictionary!</p>","text":""},{"location":"commands-overview/#history","title":"history <p>Shows all executed command</p>","text":""},{"location":"commands-overview/#battery","title":"battery <p>Shows current Battery Level. Use the optional '-bar' argument to show just the battery percentage and charging status in visual form.</p>","text":""},{"location":"commands-overview/#lock","title":"lock <p>Applies Screen Lock to your Yantra (device). Note: Appropriate permissions are required.</p>","text":""},{"location":"commands-overview/#clear","title":"clear <p>Clears the console</p>","text":""},{"location":"commands-overview/#reset","title":"reset <p>Restarts the console (Launcher) completely.</p>","text":""},{"location":"commands-overview/#cmdrequest","title":"cmdrequest <p>In case you want any new commands to be added to Yantra Launcher, run this command to open the GitHub issue template for command request. Note that it is not guaranteed that the command request will be accepted but I'll try my best to see if I could accommodate it in the upcoming versions of Yantra Launcher, if suitable.</p>","text":""},{"location":"commands-overview/#feedback","title":"feedback <p>Please provide your valuable feedback and any features you want in the next release of the app. Consider giving a 5 star review on the Play Store if you like the app.</p>","text":""},{"location":"commands-overview/#support","title":"support <p>About supporting Yantra Launcher.</p>","text":""},{"location":"commands-overview/#exit","title":"exit <p>Exit Launcher. Note: Launcher will restart if set as default Launcher</p>","text":""},{"location":"faq/","title":"Frequently Asked Questions","text":""},{"location":"faq/#1-how-to-integrate-yantra-launcher-with-termux","title":"1. How to integrate Yantra Launcher with Termux?","text":"<p>Ensure that termux is installed on your device from github or f-droid. Follow the steps below to integrate Yantra Launcher with Termux:</p> <ol> <li>Open Yantra Launcher.</li> <li> <p>Type any termux command to invoke the Permission Dialog. For example, enter</p> <pre><code>termux ls\n</code></pre> </li> <li> <p>Click on Allow in the permission dialog.</p> </li> <li> <p>Now, manually launch the termux app. You can do it via the following Yantra Launcher command:</p> <pre><code>launch termux\n</code></pre> </li> <li> <p>Set <code>allow-external-apps</code> property to <code>true</code>, by entering the following code in termux:</p> <pre><code>value=\"true\"; key=\"allow-external-apps\"; file=\"/data/data/com.termux/files/home/.termux/termux.properties\"; mkdir -p \"$(dirname \"$file\")\"; chmod 700 \"$(dirname \"$file\")\"; if ! grep -E '^'\"$key\"'=.*' $file &amp;&gt;/dev/null; then [[ -s \"$file\" &amp;&amp; ! -z \"$(tail -c 1 \"$file\")\" ]] &amp;&amp; newline=$'\\n' || newline=\"\"; echo \"$newline$key=$value\" &gt;&gt; \"$file\"; else sed -i'' -E 's/^'\"$key\"'=.*/'\"$key=$value\"'/' $file; fi\n</code></pre> <p>Source: https://github.com/termux/termux-tasker?tab=readme-ov-file#allow-external-apps-property-optional</p> </li> <li> <p>Now, you can easily execute Termux commands from your Yantra Launcher terminal. If you get an error though saying something about Termux not running in background, follow the steps mention here: https://github.com/coderGtm/yantra-app-launcher/issues/5#issuecomment-1778961986</p> </li> </ol> <p>Feel free to open an issue or discuss in the Discord community if you still face any problems!</p>"},{"location":"faq/#2-how-to-get-the-ai-command-working","title":"2. How to get the <code>ai</code> command working?","text":"<p>Getting ChatGPT like responses in your Home Screen Terminal is so cool that you don't wanna miss this feature. But to get it working, you need to follow some steps:</p> <ol> <li>Choose an AI Provider. It could be anything that conforms to the ChatGPT API Response style. You can even use a paid OpenAI API in Yantra Launcher. Free alternatives may be found here: https://github.com/zukixa/cool-ai-stuff.</li> <li>Get the base domain of the service. For example, Naga AI's API url is https://api.naga.ac/v1/chat/completions. So the base domain here would be \"api.naga.ac\". Enter this base domain only in the Yantra Launcher Settings by using the <code>settings</code> command.</li> <li>Next, get the API Key. This is the most important part. How you get an API key can differ from one service provider to other, so it's best to check out their specific instructions. For example, to get Naga AI's API Key, you need to join their Discord server and send a message there. For more assistance you may ask in their server or in Yantra Launcher's community server.</li> <li>Enter this API Key in Yantra Launcher's Settings.</li> <li>If you followed all the steps correctly and your service provider is working properly then you can now use the <code>ai</code> from your Yantra Launcher terminal.Test it by sending a message like:</li> </ol> <pre><code>ai Hello World\n</code></pre> <p>Feel free to discuss in the Discord community if you still face any issues!</p>"},{"location":"faq/#3-what-is-the-gupt-command","title":"3. What is the 'gupt' command?","text":"<p>G.U.P.T stands for \"Get Undercover Private Tab\". Tired of going to browser everytime and opening Incognito Tab. With GUPT command, you get a built-in Private incognito Tab. Example:</p> <pre><code>gupt https://www.youtube.com\n</code></pre> <p>Tip</p> <p>Use without url to default to https://www.google.com.</p> <p>Salient features of G.U.P.T:</p> <ol> <li>Launch a private browsing tab inside Yantra Launcher.</li> <li>All the data is cleared after closing the tab.</li> <li>You can also open a specific url in the private tab.</li> <li>Hidden from the recent apps list.</li> <li>No history is saved.</li> <li>No cookies are saved.</li> <li>No more going through the hassle of opening an incognito tab in your browser.</li> </ol>"},{"location":"faq/#4-how-to-use-lua-scripting-in-yantra-launcher","title":"4. How to use Lua scripting in Yantra Launcher?","text":"<p>Lua Scripting is a very powerful feature addition to Yantra Launcher using which you can literally do almost anything within your launcher. The reason being obvious: Lua is an entire programming language which has been embedded in the Launcher. This FAQ assumes that you already know how normal Yantra Launcher scripts work. If you don't know then pleas read the documentation of that command using the <code>help scripts</code> command.</p> <p>Creating a Lua script has the same process as creating a normal Yantra Launcher commands script:</p> <ol> <li>Enter the <code>scripts</code> command to open the scripts menu.</li> <li>Click on the button to create a new script and enter the script name.</li> <li>Enter the <code>scripts</code> command again to open the menu and click on your newly created script to open its editor.</li> <li>Enter the Lua code that you want to execute and click on the Save button.</li> </ol> <p>As you saw, the script creation process is the same. But the difference lies in execution, namely the <code>run</code> command. To tell Yantra Launcher that you want to execute a script as Lua code, you need to pass the <code>-lua</code> flag to the <code>run</code> command. For example, suppose your script name is \"jokeNotifier\", you can run it using:</p> <pre><code>run -lua jokeNotifier\n</code></pre> <p>Also, note that the embedded Lua language may not have the modules you are loking for. This is because most modules are written in C while this embedding is based on Java (LuaJ). But worry not, I have included 2 custom modules for the embedding using which you can do amazing things. The first one is the <code>http</code> module to create and send HTTP requests and parse their responses. The second one is a <code>binding</code> module to execute Yantra Launcher commands from Lua scripts. Also, there are custom <code>input</code> and <code>print</code> functions to facilitate IO operations in the absence of an stdout. Here are some code snippets to show the usage:</p> <pre><code>-- A script to ask for a name and wait for 5 seconds before using a Yantra Launcher command\nprint(\"Enter your name:\")\nname = input()\n\n-- Sleep for 5 seconds\nos.execute(\"sleep 5\")\n\n-- Use Yantra Launcher's 'text' command to broadcast greetings\nbinding.exec(\"text Hello \"..name..\"!\")\n</code></pre> <pre><code>-- Script to notify a random cat fact\n\n-- Make an HTTP GET request\nlocal response = http.get(\"https://catfact.ninja/fact\", {headers={}})\n\n-- Use the 'exec' function of 'binding' to execute a Yantra Launcher command string\nbinding.exec(\"notify \"..response.body.fact)\n</code></pre> <pre><code>-- Example POST request\nlocal postUrl = \"https://jsonplaceholder.typicode.com/posts\"\nlocal postData = '{\"title\": \"foo\", \"body\": \"bar\", \"userId\": 1}'\nlocal headers = {\n    [\"Content-Type\"] = \"application/json\"\n}\n\n-- Can use get, post, put, delete and patch\nlocal response = http.post(postUrl, {body=postData, headers=headers})\n\n-- Check for errors\nif response.error then\n    print(\"Error: \" .. response.error)\nelse\n    local body = response.body\n    print(\"Response ID: \" .. body.id)\n    print(\"Title: \" .. body.title)\n    print(\"Body: \" .. body.body)\n    print(\"User ID: \" .. body.userId)\nend\n</code></pre> <p>I hope these examples are enough to get you started. If that's the case then probably you can now see the extent of power you have on your fingertips while using your Yantra Lancher.</p> <p>(Yes, you know what I am saying...AUTOMATE)</p>"},{"location":"quickstart/","title":"Quickstart","text":"<p>This page aims to get you quickly started with Yantra Launcher on your Android device. It will be covering Installation and basic information about commands and their usage.</p>"},{"location":"quickstart/#installation","title":"Installation","text":"<p>Yantra Launcher is available in 2 variants:</p> <ol> <li>Minimal</li> <li>Pro</li> </ol> <p>The minimal version is for those who want the bare minimum set of commands and features. On the contrary, the Pro version has a wide array of useful commands and features. Both these variants are available to download from the Play Store. The Pro version is priced to support the project.</p>"},{"location":"quickstart/#pre-built-official-versions-direct-download","title":"Pre-built Official Versions (Direct Download)","text":"<p>Pre-built packages are recommended for most users as the app uses some Google Play Services (as much as I feel bad about it) which are ensured  to be present on your device while downloading from the Play Store.</p> <p>1) Minimal Version 2) Pro Version</p>"},{"location":"quickstart/#building","title":"Building","text":"<p>For building the app yourself, see here</p>"},{"location":"quickstart/#usage","title":"Usage","text":"<p>Once you get the app, open it and tada... Welcome to Yantra Launcher! Your wallpaper will be gone and a solid black terminal background will be made available. Some text and a blinking cursor will be waiting for you below it!</p> <p>The first thing you should (or rather must) do now is type <code>help</code>. Notice how the bottom suggestion bar changes as you type to make it easy for you. Hit enter and you will see a long text output. This is a short introduction to every command you can use in this terminal. Once you are done reading it, I am sure you can do basic tasks like launching apps.</p>"},{"location":"quickstart/#setting-as-the-default-launcher","title":"Setting as the Default Launcher","text":"<p>When you are somewhat comfortable with Yantra Launcher, you can set it as your default Launcher so every time you unlock your phone or exit an app, you go back to your Terminal Home Screen.</p> <p>To do so, type <code>settings</code> and hit Enter. A GUI settings page for Yantra Launcher will open. Find the setting for selecting the default Launcher and click on it. It will show all the available Launchers on your device. Select Yantra Launcher and choose \"Always\". Yantra Launcher will now be your Home Screen. Enjoy!</p>"},{"location":"quickstart/#commands","title":"Commands","text":"<p>To get a quick overview of all the commands, see the Commands Overview page. For detailed information on each command, check out the commands section in the sidebar.</p>"},{"location":"commands/ai/","title":"ai","text":"<p>The <code>ai</code> command is used to access ChatGPT-like AI models from Yantra Launcher.</p>"},{"location":"commands/ai/#syntax","title":"Syntax","text":"<pre><code>ai [message/reset]\n</code></pre>"},{"location":"commands/ai/#setup","title":"Setup","text":"<p>To use the <code>ai</code> command, you need 2 things:</p> <ol> <li>An AI provider, and</li> <li>An API Key</li> <li>(Optional) System prompt</li> </ol> <p>An AI provider is a service that follows the OpenAI API Reference. Although you can use the ChatGPT API directly, keep in mind that it is a paid service.</p> <p>Note</p> <p>There are numerous free AI API providers that are compatible with the command as they follow the OpenAI standard. Some examples include NagaAI and Zukijourney.</p> <p>The API Key is provided by the respective AI Service provider. The System Prompt is a type of instruction given to the AI model to follow for the entire conversation. Try playing with it to get interesting responses. Enter all these in the page opening by using the <code>settings</code> command.</p> <p>Try out a simple message like <pre><code>ai hi\n</code></pre> If a response is received from the AI model then you have successfully setup the command!</p>"},{"location":"commands/ai/#usage","title":"Usage","text":"<p>Now you can have a great conversation with your AI assistant right from your home screen! <pre><code>ai why should i use a command line launcher?\n</code></pre> Use the <code>ai reset</code> command to clear the conversation history from Yantra Launcher</p> <p>Warning</p> <p>Keep in mind that the API you are using is charged by your provider based on the tokens used. The more you chat with <code>ai</code>, the more tokens are used as the entire conversation is being evaluated by the model. So, to keep usage minimum, consider using the <code>ai reset</code> command to clear the conversation history from Yantra Launcher when you no longer need the model to remember past conversations.</p>"},{"location":"commands/alias/","title":"alias","text":"<p>Create short-hand commands for longer or frequently used commands.</p> <p>Note</p> <p>Yantra Launcher aliases are retained even after restarting the launcher session, unlike the aliases in usual or conventional shells (1).</p> <ol> <li>In this context usual or conventional shells refer to shells like Bash, Zsh, CMD, Powershell, etc. Yantra is unusual in this regard because of its unique features for aliases, which is persistency.</li> </ol> <p>Note</p> <p>Pre-defined commands can not be aliased.</p>"},{"location":"commands/alias/#syntax","title":"Syntax","text":"<p>To set an alias: <pre><code>alias alias_name = alias_cmd\n</code></pre></p> <p>To get value of an alias: <pre><code>alias alias_name\n</code></pre></p> <p>To list all aliases: <pre><code>alias\n</code></pre></p> <p>To reset all aliases to default: <pre><code>alias -1\n</code></pre></p>"},{"location":"commands/alias/#examples","title":"Examples","text":"Example IExample IIExample III <p>Simple Command Alias<pre><code>alias h = help\n</code></pre> This will create an alias <code>h</code> for the <code>help</code> command.</p> <p>Alias With Arguments<pre><code>alias ps = search -playstore\n</code></pre> This will create an alias <code>ps</code> for the <code>search -playstore</code> command. This will let you search the Play Store with the <code>ps</code> command.</p> <p>Example</p> <pre><code>ps Yantra Launcher\n</code></pre> <p>Alias for App Launch<pre><code>alias cod = launch call of duty\n</code></pre> This will create an alias <code>cod</code> for the <code>launch call of duty</code> command. This will let you launch Call of Duty with the <code>cod</code> command.</p>"},{"location":"commands/bored/","title":"bored","text":"<p>The <code>bored</code> command is a simple command that returns a random activity to do when you're bored. This command is powered by the Bored API.</p> <p>Note</p> <p>This command requires an active internet connection to work.</p>"},{"location":"commands/bored/#usage","title":"Usage","text":"<pre><code>bored\n</code></pre>"},{"location":"commands/call/","title":"call","text":"<p>The <code>call</code> command is used to make a phone call to any contact or phone number \ud83d\udcde.</p> <p>Note</p> <p>You will need to provide the Calling permission to Yantra Launcher in order to make calls. When you issue this command without the permission, Yantra Launcher will ask you for the permission via a system prompt.</p> <p>Tip</p> <p>In order to call a contact saved in your Contacts, Yantra Launcher needs access to read these contacts. You can quickly set this up by using the <code>list contacts</code> command which will ask you for the permission. Once granted, you should again use the command so that Yantra Launcher can read the list.</p>"},{"location":"commands/call/#calling-a-saved-contact","title":"Calling a saved contact","text":"<p>You can quickly call any of your contact by just specifying the contact name after the <code>call</code> command.</p>"},{"location":"commands/call/#example","title":"Example","text":"<pre><code>call Mumma\n</code></pre> <p>If multiple phone numbers exist for a given contact name, a popup dialog will be shown to select the number that you want to dial.</p> <p>Tip</p> <p>You can avoid the hassle of selecting a phone number that you frequently call from a popup by making an alias to directly call the specified phone number.</p>"},{"location":"commands/call/#directly-calling-a-phone-number","title":"Directly calling a phone number","text":"<p>You can also directly call a raw phone number by providing it as the parameter to the call command.</p>"},{"location":"commands/call/#example_1","title":"Example","text":"<pre><code>call 1234567890\n</code></pre> <p>Warning</p> <p>If you provide a contact name and it is not in your contact list, Yantra Launcher will consider it as a raw phone number input and Android will parse it to call the parsed number.</p>"},{"location":"commands/exit/","title":"exit","text":"<p>Exits Yantra Launcher. That's it!</p> <p>Note</p> <p>If you've set Yantra Launcher as the default Launcher, the system will restart the app. To prevent this, you'd need to set a different default launcher from the <code>setting</code> screen.</p>"},{"location":"commands/help/","title":"help","text":"<p>As the name suggests, this command is your friend to navigate through the Launcher. It will provide you with a list of all available commands and their descriptions, with basic usage information.</p>"},{"location":"commands/help/#syntax","title":"Syntax","text":"<p><pre><code>help\n</code></pre> This command will display a list of all available commands and their descriptions.</p> <p>If you want to know just about a specific command, you can use: <pre><code>help [command]\n</code></pre></p>"},{"location":"commands/help/#example","title":"Example","text":"<p><pre><code>help\nhelp launch\n</code></pre> This will display detailed information about the <code>launch</code> command.</p> <p>Tip</p> <p>You can also long press any command suggestion to get a brief description of the command in the form of a popup dialog.</p>"},{"location":"commands/internet/","title":"internet","text":"<p>Opens the system panel for toggling Internet connections. Can select Mobile Data, Wi-Fi, and even select the SIM or the Wi-Fi network to connect to.</p>"},{"location":"commands/internet/#usage","title":"Usage","text":"<pre><code>internet\n</code></pre>"},{"location":"commands/launch/","title":"launch","text":"<p>This is the most basic command and also the most used command in Yantra Launcher. As the name suggests, it is used to launch apps in different ways. Apart from apps, it can even launch app shortcuts.</p>"},{"location":"commands/launch/#syntax","title":"Syntax","text":"<pre><code>launch [-p/-s] app_name/package_name/shortcut_name\n</code></pre>"},{"location":"commands/launch/#examples","title":"Examples","text":"<p>To launch any app by its name, you can start typing the name of the app and select it from the suggestions bar (if you have kept it enabled). Also, you can configure Yantra Launcher to directly launch an app if it is the last remaining option. See <code>settings</code>. <pre><code>launch whatsapp\n</code></pre> You can also launch an app by its package name if needed, by providing the <code>-p</code> flag. This can be particularly useful when there are 2 apps with the exact same name and you don't want to face a selection popup everytime. Aliasing this command can be very useful in that case. <pre><code>launch -p com.xyz.gallery\n</code></pre> Also, you can directly launch app shortcuts (the ones that you see when you long-press an app icon on traditional GUI app launchers) using the -s flag You can list all shortcuts using the <code>list shortcuts</code> command. For example, this command will launch the Spotify screen that shows songs tailored for you. <pre><code>launch -s Made for you\n</code></pre></p>"},{"location":"commands/quote/","title":"quote","text":"<p>The command displays a random quote from a very huge collection of quotes pre-bundled with the app. It does not require an Internet connection.</p>"},{"location":"commands/quote/#usage","title":"Usage","text":"<pre><code>quote\n</code></pre>"},{"location":"commands/reset/","title":"reset","text":"<p>This command restart the Terminal Launcher completely. All temporary memory like command history is cleared as the app process is restarted.</p>"},{"location":"commands/scripts/","title":"scripts","text":"<p>This is a command which allows you to create your own script on <code>Lua</code> language, or create the list of yantra's commands which will be executing command-by-command</p> <p>Note</p> <p>Currently, the scripts folder is internal to Yantra Launcher and cannot be accessed or edited directly using external text editors or file management applications.</p>"},{"location":"commands/scripts/#syntax","title":"Syntax","text":"<pre><code>scripts\n</code></pre> <p>This command just open a dialog in which you can edit current scripts or create a new one.</p>"},{"location":"commands/scripts/#examples","title":"Examples","text":"<p>Simple Lua code example:</p> <pre><code>print(\"Hello, World!\")\n</code></pre> <p>A game: <pre><code>math.randomseed(os.time())\nlocal secretNumber = math.random(1, 100)\nlocal guess = nil\nlocal attempts = 0\n\nprint(\"Guess the number between 1 and 100!\")\n\nwhile guess ~= secretNumber do\n    print(\"Enter your guess: \")\n    guess = tonumber(input())  -- You need to use input instead of io.read()\n    attempts = attempts + 1\n\n    if guess &lt; secretNumber then\n        print(\"Too low!\")\n    elseif guess &gt; secretNumber then\n        print(\"Too high!\")\n    else\n        print(\"Congratulations! You guessed the number in \" .. attempts .. \" attempts.\")\n    end\nend\n</code></pre></p> <p>Yantra command-by-command script <pre><code>termux python hs.py HELLO\nlaunch discord\necho hi\n</code></pre></p>"},{"location":"commands/scripts/#notes-about-lua","title":"Notes about Lua:","text":"<p>You need to use input instead of io.read() TO exe</p>"},{"location":"commands/search/","title":"search","text":"<p>Query search engines then open the link on your default browser.</p> <p>Tip</p> <p>You can use <code>alias</code> feature to set your favorite engine as the default.</p>"},{"location":"commands/search/#syntax","title":"Syntax","text":"<pre><code>search -e=&lt;engine_name&gt; -u=&lt;URL&gt;\n</code></pre>"},{"location":"commands/search/#options","title":"Options","text":"<code>-e</code> (engine)<code>-u</code> (url) <p>Specify the search engine.</p> <p>Default: <code>google</code></p> <p>Available Search Engines:</p> <ul> <li><code>google</code></li> <li><code>duckduckgo</code></li> <li><code>brave</code></li> <li><code>bing</code></li> <li><code>yahoo</code></li> <li><code>ecosia</code></li> <li><code>startpage</code></li> <li><code>qwant</code></li> <li><code>you</code></li> <li><code>playstore</code></li> <li><code>maps</code></li> </ul> <p>If your favorite search engine is not listed for <code>-e</code> flag, you can use this flag to provide a custom search engine to use.</p> <p>Your search query will be inserted into the end of the URL.</p> <p>Example:</p> <pre><code>- `-u=https://example.com/search?q=`\n</code></pre> <p>Info</p> <p>Queries are URL-encoded before substitution.</p>"},{"location":"commands/search/#examples","title":"Examples","text":"Example IExample IIExample III Searching With Default Engine<pre><code>search Yantra Launcher\n</code></pre> Searching With Another Search Engine<pre><code>search -e=duckduckgo Yantra Launcher\n</code></pre> Using Custom Search Engines<pre><code>search -u=https://example.com/search?q= Yantra Launcher\n</code></pre>"},{"location":"commands/text/","title":"text","text":"<p>A simple command to send a text broadcast to the OS.</p>"},{"location":"commands/text/#syntax","title":"Syntax","text":"<p><pre><code>text &lt;message&gt;\n</code></pre> The system will broadcast the message to all the available messaging apps as well as apps that can handle text broadcasts.</p>"},{"location":"commands/text/#example","title":"Example","text":"<p><pre><code>text Hi, how are you?\n</code></pre> This will broadcast the message \"Hi, how are you?\" to the system which will then handle it accordingly.</p> <p></p>"},{"location":"commands/theme/","title":"theme","text":"<p>Used to set the theme for Yantra Launcher.</p>"},{"location":"commands/theme/#syntax","title":"Syntax","text":"<pre><code>theme &lt;theme_name&gt;\n</code></pre>"},{"location":"commands/theme/#built-in-themes","title":"Built-in Themes","text":"<p>There are many built-in themes in Yantra Launcher apart from the Default theme:</p> <ol> <li>Light</li> <li>Hacker</li> <li>Ocean</li> <li>Gruvbox</li> <li>Material</li> <li>Dark</li> <li>Solarized</li> <li>Dracula</li> <li>Monokai</li> <li>Green</li> <li>Red</li> <li>Blue</li> <li>Yellow</li> <li>Purple</li> <li>Orange</li> <li>Pink</li> <li>ubuntu</li> <li>Tokyonight</li> <li>Everforest</li> <li>Powershell</li> </ol>"},{"location":"commands/theme/#example","title":"Example","text":"<pre><code>theme Gruvbox\n</code></pre>"},{"location":"commands/theme/#custom-theme","title":"Custom Theme","text":"<p>Apart from these built-in themes, you can even create your own custom theme using the \"custom\" parameter.</p> <p>Creating a custom theme requires you to select the following parameters from a built-in color picker or enter the hex codes manually for them.</p> <ul> <li>Background Color</li> <li>Input Color</li> <li>Command Color</li> <li>Normal Text and Arrow Color</li> <li>Error text Color</li> <li>Positive text Color</li> <li>Warning Text Color</li> <li>Suggestions Color</li> <li>Suggestion Bar Color</li> </ul>"},{"location":"commands/theme/#example_1","title":"Example","text":"<pre><code>theme Custom\n</code></pre>"},{"location":"commands/tts/","title":"tts","text":"<p>The <code>tts</code> command stands for Text To Speech. As the name suggests, it is used for converting a text input to an audio output.</p>"},{"location":"commands/tts/#usage","title":"Usage","text":"<pre><code>tts &lt;text goes here&gt;\n</code></pre> <p>Internally, it uses the Google Speech Synthesis engine for converting the text to audio. The engine is invoked for the period of the synthesis and then shut back down to preserve resources.</p>"},{"location":"commands/tts/#example","title":"Example","text":"<pre><code>tts Yantra Launcher is cool\n</code></pre>"},{"location":"commands/username/","title":"username","text":"<p>This command is used to change the username of your terminal home screen. It is the name that is displayed at the start of the commands and the command input prompt.</p>"},{"location":"commands/username/#syntax","title":"Syntax","text":"<pre><code>username &lt;new_username&gt;\n</code></pre>"},{"location":"commands/username/#example","title":"Example","text":"<p><pre><code>username coderGtm\n</code></pre> This sets the username to \"coderGtm\".</p>"},{"location":"commands/web/","title":"web","text":"<p>The <code>web</code> command is used to open a web page in your default web browser.</p>"},{"location":"commands/web/#example-i","title":"Example I","text":"<pre><code>web https://reddit.com\n</code></pre> <p>Specifying the protocol is not necessary and the launcher will default to prefixing <code>http://</code> in that case. Most websites will automatically reroute http traffic to https if it's available so you can safely ignore the protocol.</p>"},{"location":"commands/web/#example-ii","title":"Example II","text":"<pre><code>web reddit.com\n</code></pre> Note <p>This command will only work if you have a browser installed on your device which handles requests to open URLs. Ofcourse, how will it work without a \"web\" browser?</p>"}]}